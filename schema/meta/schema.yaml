---
#
# This is the "master" schema, which validates the format of the runtime
# schemas. Its purpose is to turn a runtime schema syntax error into a
# compile-time one.
#
$schema: http://json-schema.org/draft-07/schema#
title: OBD-II PIDs
description: An assortment of OBD-II PIDs
type: object

defs:
  yobd-raw-unit:
    description: A yobd data unit
    type: string
    enum:
      # Please keep this list sorted to avoid accidental duplicates.
      - celsius
      - degree
      - g/s
      - K
      - kg/s
      - km
      - km/h
      - kPa
      - lat
      - lng
      - m
      - m/s
      - m/s^2
      - nm
      - ns
      - Pa
      - percent
      - rad/s
      - rpm
      - s

  yobd-si-unit:
    description: A yobd SI data unit
    type: string
    enum:
      # Please keep this list sorted to avoid accidental duplicates.
      - degree
      - K
      - kg/s
      - lat
      - lng
      - m
      - m/s
      - ns
      - Pa
      - percent
      - rad
      - rad/s

  yobd-type:
    description: A yobd data type
    type: string
    enum:
      # Please keep this list sorted to avoid accidental duplicates.
      - float
      - int16
      - int32
      - int64
      - int8
      - uint16
      - uint32
      - uint64
      - uint8

  one-byte-hex:
    description: A PID from mode 0x1 (1 byte)
    type: string
    pattern: ^0x([0-9]|[a-f]){1,2}$

  two-byte-hex:
    description: A mode (2 bytes)
    type: string
    pattern: ^0x([0-9]|[a-f]){1,4}$

  name:
    description: A friendly name for the PID
    type: string
    minLength: 1

  bytes:
    description: The number of bytes the unparsed PID occupies
    type: integer
    minimum: 1
    maximum: 4

  expr:
    description: How to unpack this PID to get its real value
    type: object
    properties:
      type:
        $ref: "#/defs/yobd-type"
      val:
        type: string
        format: infix
    required:
      - type
      - val
    additionalProperties: false

  pid:
    description: An OBD-II PID
    type: object
    format: nop-bytes
    properties:
      name:
        $ref: "#/defs/name"
      bytes:
        $ref: "#/defs/bytes"
      raw-unit:
        $ref: "#/defs/yobd-raw-unit"
      si-unit:
        $ref: "#/defs/yobd-si-unit"
      expr:
        $ref: "#/defs/expr"
    required:
      - name
      - bytes
      - raw-unit
      - si-unit
      - expr
    additionalProperties: false

properties:
  endian:
    $ref: "sschema://endian.yaml"
  modepid:
    description: A map from mode to all pids in the mode
    type: object
    minProperties: 1
    properties:
      0x1:
        type: object
        minProperties: 1
        propertyNames:
          $ref: "#/defs/one-byte-hex"
        additionalProperties:
          $ref: "#/defs/pid"
    propertyNames:
      $ref: "#/defs/two-byte-hex"
    additionalProperties:
      type: object
      minProperties: 1
      propertyNames:
        $ref: "#/defs/two-byte-hex"
      additionalProperties:
        $ref: "#/defs/pid"

additionalProperties: false
required:
  - endian
  - modepid
